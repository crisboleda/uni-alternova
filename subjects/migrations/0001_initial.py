# Generated by Django 5.1.6 on 2025-02-09 03:43

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("professors", "0001_initial"),
        ("students", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubjectStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=120, verbose_name="name")),
                (
                    "code_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="code name"
                    ),
                ),
            ],
            options={
                "verbose_name": "subject status",
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=80, verbose_name="subject name"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="subject description"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active?"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "required_subjects",
                    models.ManyToManyField(
                        to="subjects.subject", verbose_name="required subjects"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubjectRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="start date")),
                ("finish_date", models.DateTimeField(verbose_name="finish date")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "professor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="professors.professor",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="students.student",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="subjects.subject",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="subjects.subjectstatus",
                    ),
                ),
            ],
        ),
    ]
